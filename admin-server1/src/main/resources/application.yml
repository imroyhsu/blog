server:
  port: 8762
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    #2.1版本后，添加druid-spring-boot-starter依赖，可以直接联想出相关配置，且省略配置类
    druid:
      url: jdbc:mysql://localhost:3306/testjdbc?serverTimezone=GMT%2B8
      driver-class-name: com.mysql.cj.jdbc.Driver
      username: root
      password: 692806
      #初始
      initial-size: 1
      #最小空闲
      min-idle: 1
      #最大活动
      max-active: 100
      #获取连接等待超时时间
      max-wait: 60000
      #每隔一分钟检测需要关闭的空闲连接
      time-between-eviction-runs-millis: 60000
      #最小生存时间
      min-evictable-idle-time-millis: 300000
      validation-Query: select 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      use-global-data-source-stat: true
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
      # 配置DruidStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: "/*"
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
      # 配置DruidStatViewServlet
      stat-view-servlet:
        url-pattern: "/druid/*"
        # IP白名单(没有配置或者为空，则允许所有访问)
        allow: 192.168.1.195
        # IP黑名单 (存在共同时，deny优先于allow)
        deny: 192.168.1.119
        #  禁用HTML页面上的“Reset All”功能
        reset-enable: false
        # 登录名
        login-username: admin
        # 登录密码
        login-password: 123456
  application:
    name: admin-server
  devtools:
    livereload:
      enabled: true #是否支持livereload
      port: 35729
    restart:
      enabled: true #是否支持热部署

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS

eureka:
  instance:
    #表示eureka client发送心跳给server端的频率，默认为30秒
    leaseRenewalIntervalInSeconds: 10
    health-check-url-path: /actuator/health
    # 自定义实例编号
    instance-id: ${spring.application.name}:${server.port}
  client:
    #表示eureka client间隔多久去拉取服务注册信息，默认为30秒
    registryFetchIntervalSeconds: 5
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/



# slf4j日志配置
logging:
  # 配置级别
  level:
    #分包配置级别，即不同的目录下可以使用不同的级别，日志级别总共有
    #TARCE < DEBUG < INFO < WARN < ERROR < FATAL ，且级别是逐渐提供，如果日志级别设置为INFO，则意味级别低的TRACE和DEBUG级别的日志都看不到。
    root: info
  # 指定输出日志的文件名，默认输出至当前项目目录下
  file: /Users/royhsu/workspace/logs/blog-logs/admin-server.log
  pattern:
    console: "%d{yyyy/MM/dd-HH:mm:ss} [%thread] %-5level %logger- %msg%n"
    file: "%d{yyyy/MM/dd-HH:mm:ss} [%thread] %-5level %logger- %msg%n"